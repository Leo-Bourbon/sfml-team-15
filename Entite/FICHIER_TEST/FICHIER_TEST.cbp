<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<CodeBlocks_project_file>
	<FileVersion major="1" minor="6" />
	<Project>
		<Option title="FICHIER_TEST" />
		<Option pch_mode="2" />
		<Option compiler="gcc" />
		<Build>
			<Target title="Debug">
				<Option output="bin/Debug/SemaineProjet" prefix_auto="1" extension_auto="1" />
				<Option object_output="obj/Debug/" />
				<Option type="1" />
				<Option compiler="gcc" />
				<Compiler>
					<Add option="-g" />
					<Add directory="include" />
				</Compiler>
				<Linker>
					<Add library="sfml-graphics" />
					<Add library="sfml-window" />
					<Add library="sfml-system" />
				</Linker>
			</Target>
			<Target title="Release">
				<Option output="bin/Release/SemaineProjet" prefix_auto="1" extension_auto="1" />
				<Option object_output="obj/Release/" />
				<Option type="0" />
				<Option compiler="gcc" />
				<Compiler>
					<Add option="-O2" />
					<Add directory="include" />
				</Compiler>
				<Linker>
					<Add option="-s" />
					<Add library="sfml-graphics" />
					<Add library="sfml-window" />
					<Add library="sfml-system" />
				</Linker>
			</Target>
		</Build>
		<Compiler>
			<Add option="-Wall" />
			<Add directory="$(#sfml.include)" />
		</Compiler>
		<Linker>
			<Add library="mingw32" />
			<Add library="user32" />
			<Add library="gdi32" />
			<Add library="winmm" />
			<Add library="dxguid" />
			<Add directory="$(#sfml.lib)" />
		</Linker>
		<Unit filename="cb.bmp" />
		<Unit filename="fonctions.cpp" />
		<Unit filename="fonctions.h" />
		<Unit filename="include/Ennemi.h" />
		<Unit filename="include/Entite.h" />
		<Unit filename="include/EntiteVivante.h" />
		<Unit filename="include/Joueur.h" />
		<Unit filename="main.cpp" />
		<Unit filename="src/Ennemi.cpp" />
		<Unit filename="src/Entite.cpp" />
		<Unit filename="src/EntiteVivante.cpp" />
		<Unit filename="src/Joueur.cpp" />
		<Extensions>
			<code_completion />
			<envvars />
			<debugger />
			<lib_finder disable_auto="1" />
		</Extensions>
	</Project>
</CodeBlocks_project_file>
